# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ctlptl < Formula
  desc "Making local Kubernetes clusters easy to set up and tear down"
  homepage "https://ctlptl.dev/"
  version "0.8.31"

  on_macos do
    on_intel do
      url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.31/ctlptl.0.8.31.mac.x86_64.tar.gz"
      sha256 "cad0248e3b78ce3db9286c72167b58b6747bbb903704139b0ab40cb9097d1abd"

      def install
        bin.install "ctlptl"

        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
        (bash_completion/"ctlptl").write output

        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
        (zsh_completion/"_ctlptl").write output

        # Install fish completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
        (fish_completion/"ctlptl.fish").write output
      end
    end
    on_arm do
      url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.31/ctlptl.0.8.31.mac.arm64.tar.gz"
      sha256 "19fa9cafa71a482cf7d7c1b5a4517791c5365d7998a959361bcd0523c609b087"

      def install
        bin.install "ctlptl"

        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
        (bash_completion/"ctlptl").write output

        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
        (zsh_completion/"_ctlptl").write output

        # Install fish completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
        (fish_completion/"ctlptl.fish").write output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.31/ctlptl.0.8.31.linux.x86_64.tar.gz"
        sha256 "ce104f4db1d7935130a07a6c5868c9804ec4b1247b88d71863375512d79d0616"

        def install
          bin.install "ctlptl"

          # Install bash completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
          (bash_completion/"ctlptl").write output

          # Install zsh completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
          (zsh_completion/"_ctlptl").write output

          # Install fish completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
          (fish_completion/"ctlptl.fish").write output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.31/ctlptl.0.8.31.linux.arm64.tar.gz"
        sha256 "bf8ad10272a1578688ebdd4d06f873fce569ef9b04bca07cdd022255b18b5f39"

        def install
          bin.install "ctlptl"

          # Install bash completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
          (bash_completion/"ctlptl").write output

          # Install zsh completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
          (zsh_completion/"_ctlptl").write output

          # Install fish completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
          (fish_completion/"ctlptl.fish").write output
        end
      end
    end
  end

  test do
    system "#{bin}/ctlptl version"
  end
end
