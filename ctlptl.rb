# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ctlptl < Formula
  desc "Making local Kubernetes clusters easy to set up and tear down"
  homepage "https://ctlptl.dev/"
  version "0.8.30"

  on_macos do
    on_intel do
      url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.30/ctlptl.0.8.30.mac.x86_64.tar.gz"
      sha256 "0ec7c1c8149c6b09ad33ee14c9f3f0b400a84af798acbe84572af099698bdf4d"

      def install
        bin.install "ctlptl"

        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
        (bash_completion/"ctlptl").write output

        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
        (zsh_completion/"_ctlptl").write output

        # Install fish completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
        (fish_completion/"ctlptl.fish").write output
      end
    end
    on_arm do
      url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.30/ctlptl.0.8.30.mac.arm64.tar.gz"
      sha256 "1f23786bf25ef0f3f0c33f4123f29c41b653f4cd57f89966a7278a4389121d48"

      def install
        bin.install "ctlptl"

        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
        (bash_completion/"ctlptl").write output

        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
        (zsh_completion/"_ctlptl").write output

        # Install fish completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
        (fish_completion/"ctlptl.fish").write output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.30/ctlptl.0.8.30.linux.x86_64.tar.gz"
        sha256 "36af4166bb52e10e3475450bf82811507ccb26ad43e5d31df900d5fa209519f8"

        def install
          bin.install "ctlptl"

          # Install bash completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
          (bash_completion/"ctlptl").write output

          # Install zsh completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
          (zsh_completion/"_ctlptl").write output

          # Install fish completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
          (fish_completion/"ctlptl.fish").write output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.30/ctlptl.0.8.30.linux.arm64.tar.gz"
        sha256 "71bd18b02964a07e571464171197de19c3769b078450124f0b9f39593607a6b8"

        def install
          bin.install "ctlptl"

          # Install bash completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
          (bash_completion/"ctlptl").write output

          # Install zsh completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
          (zsh_completion/"_ctlptl").write output

          # Install fish completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
          (fish_completion/"ctlptl.fish").write output
        end
      end
    end
  end

  test do
    system "#{bin}/ctlptl version"
  end
end
