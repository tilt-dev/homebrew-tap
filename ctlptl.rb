# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ctlptl < Formula
  desc "Making local Kubernetes clusters easy to set up and tear down"
  homepage "https://ctlptl.dev/"
  version "0.8.40"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.40/ctlptl.0.8.40.mac.x86_64.tar.gz"
      sha256 "df6a287d7577913afcbd8dcc08dbfd9bd3af53c70d1b0339c044c06af45edfa2"

      def install
        bin.install "ctlptl"

        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
        (bash_completion/"ctlptl").write output

        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
        (zsh_completion/"_ctlptl").write output

        # Install fish completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
        (fish_completion/"ctlptl.fish").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.40/ctlptl.0.8.40.mac.arm64.tar.gz"
      sha256 "8ddaf75e4a867e32a841f632df7be1c873637c109877bfd3994880a60dda0367"

      def install
        bin.install "ctlptl"

        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
        (bash_completion/"ctlptl").write output

        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
        (zsh_completion/"_ctlptl").write output

        # Install fish completion
        output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
        (fish_completion/"ctlptl.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.40/ctlptl.0.8.40.linux.x86_64.tar.gz"
        sha256 "e62965ea159e512d47971d8558c1db28cd4414c0d65488b0825984ed521eb4e8"

        def install
          bin.install "ctlptl"

          # Install bash completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
          (bash_completion/"ctlptl").write output

          # Install zsh completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
          (zsh_completion/"_ctlptl").write output

          # Install fish completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
          (fish_completion/"ctlptl.fish").write output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/tilt-dev/ctlptl/releases/download/v0.8.40/ctlptl.0.8.40.linux.arm64.tar.gz"
        sha256 "da50985b396671f4094237b64c6c8e811b84f2b9d6855c0297846816b558d13b"

        def install
          bin.install "ctlptl"

          # Install bash completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "bash")
          (bash_completion/"ctlptl").write output

          # Install zsh completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "zsh")
          (zsh_completion/"_ctlptl").write output

          # Install fish completion
          output = Utils.safe_popen_read("#{bin}/ctlptl", "completion", "fish")
          (fish_completion/"ctlptl.fish").write output
        end
      end
    end
  end

  test do
    system "#{bin}/ctlptl version"
  end
end
